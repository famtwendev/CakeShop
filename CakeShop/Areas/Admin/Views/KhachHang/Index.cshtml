@using X.PagedList
@model IPagedList<CakeShop.Data.KhachHang>

@{
    ViewData["Title"] = "Danh sách khách hàng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<h1>Danh sách khách hàng</h1>

<p class="text-right">
    <a asp-action="Create" class="btn btn-info">Thêm khách hàng mới</a>
</p>
<table class="table">
    <thead class="table-warning">
        <tr>
            <th>
                Họ tên
            </th>
            <th>
                Giới tính
            </th>
            <th>
                Ngày sinh
            </th>
            <th>
                Mật khẩu
            </th>
            <th>
                Địa chỉ
            </th>
            <th>
                Điện thoại
            </th>
            <th>
                Email
            </th>
            <th>
                Hiệu lực
            </th>
            <th>
                Vai trò
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
            string @cls = "table-success";
        }
        @foreach (var item in Model)
        {
            i = i + 1;
            cls = "table-success";
            if (i % 2 == 0)
            {
                cls = "table-info";
            }
            <tr class="@cls">
                <td>
                @Html.DisplayFor(modelItem => item.HoTen)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GioiTinh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgaySinh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MatKhau)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiaChi)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DienThoai)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HieuLuc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VaiTro)
            </td>
            <td>
                    <a asp-action="Edit" asp-route-id="@item.MaKh" class="btn btn-warning">Chỉnh sử</a> |
                    <a asp-action="Details" asp-route-id="@item.MaKh" class="btn btn-info">Chi Tiết</a> |
                    <a asp-action="Delete" asp-route-id="@item.MaKh" class="btn btn-danger">Xóa</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="container d-flex justify-content-center align-content-center">
    <div class="row">
        <nav aria-label="navigation">
            <ul class="pagination mt-50 mb-70">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">
                            <i class="fa fa-angle-left"></i>
                        </a>
                    </li>
                }
                @for (int a = 1; a <= Model.PageCount; a++)
                {
                    <li class="page-item @(Model.PageNumber == a ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = a })">@a</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">
                            <i class="fa fa-angle-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>